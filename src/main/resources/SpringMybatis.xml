<?xml version="1.0" encoding="UTF-8"?>
<beans xsi:schemaLocation=" http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans">

	<!-- ========================================配置数据源========================================= -->
	<!-- 配置数据源，使用的是alibaba的Druid(德鲁伊)数据源 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:JDBC.properties"/>
	<bean class="com.alibaba.druid.pool.DruidDataSource" id="dataSource" destroy-method="close" init-method="init">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
	<!-- 初始化连接大小 -->
		<property value="0" name="initialSize"/>
	<!-- 连接池最大使用连接数量 -->
		<property value="20" name="maxActive"/>
	<!-- 连接池最小空闲 -->
		<property value="0" name="minIdle"/>
	<!-- 获取连接最大等待时间 -->
		<property value="60000" name="maxWait"/>
		<property value="${validationQuery}" name="validationQuery"/>
		<property value="false" name="testOnBorrow"/>
		<property value="false" name="testOnReturn"/>
		<property value="true" name="testWhileIdle"/>
	<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	<property value="60000" name="timeBetweenEvictionRunsMillis"/>
	<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	<property value="25200000" name="minEvictableIdleTimeMillis"/>
	<!-- 打开removeAbandoned功能 -->
	<property value="true" name="removeAbandoned"/>
	<!-- 1800秒，也就是30分钟 -->
	<property value="1800" name="removeAbandonedTimeout"/>
	<!-- 关闭abanded连接时输出错误日志 -->
	<property value="true" name="logAbandoned"/>
	<!-- 监控数据库 -->
	<!-- <property name="filters" value="stat" /> -->
	<property value="mergeStat" name="filters"/>
	</bean>

	<!-- ========================================针对myBatis的配置项============================== -->

	<!-- 配置sqlSessionFactory -->

	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">

	<!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
	<property name="dataSource" ref="dataSource"/>

	<!-- 自动扫描Mybatis的Mapper.xml文件 -->
	<property value="classpath:com/org/mapper/*.xml" name="mapperLocations"/>

	</bean>
	<!-- 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!-- 扫描com.org.mapper这个包以及它的子包下的所有映射接口类 -->
	<property value="com.org.mapper" name="basePackage"/>
	<property value="sqlSessionFactory" name="sqlSessionFactoryBeanName"/>

	</bean>
	<!-- 配置事务管理器 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
	<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
	<tx:attributes>
	<tx:method name="add*" propagation="REQUIRED"/>
	<tx:method name="append*" propagation="REQUIRED"/>
	<tx:method name="insert*" propagation="REQUIRED"/>
	<tx:method name="save*" propagation="REQUIRED"/>
	<tx:method name="update*" propagation="REQUIRED"/>
	<tx:method name="modify*" propagation="REQUIRED"/>
	<tx:method name="edit*" propagation="REQUIRED"/>
	<tx:method name="delete*" propagation="REQUIRED"/>
	<tx:method name="remove*" propagation="REQUIRED"/>
	<tx:method name="repair" propagation="REQUIRED"/>
	<tx:method name="delAndRepair" propagation="REQUIRED"/>
	<tx:method name="get*" propagation="SUPPORTS"/>
	<tx:method name="find*" propagation="SUPPORTS"/>
	<tx:method name="load*" propagation="SUPPORTS"/>
	<tx:method name="search*" propagation="SUPPORTS"/>
	<tx:method name="datagrid*" propagation="SUPPORTS"/>
	<tx:method name="*" propagation="SUPPORTS"/>
</tx:attributes>

</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.org.service..*Impl.*(..))" />
	<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"/>
</aop:config>
	<!-- 配置druid监控spring jdbc -->
	<bean class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" id="druid-stat-interceptor"/>
	<bean class="org.springframework.aop.support.JdkRegexpMethodPointcut" id="druid-stat-pointcut" scope="prototype">
	<property name="patterns">
	<list>
	<value>com.org.service.*</value>
	</list>
	</property>
</bean>
	<aop:config>
	<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut"/>
	</aop:config>
</beans>